from telebot.types import (
    Message,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    CallbackQuery,
)

from bot import bot
from bot.models import User
from bot.handlers.user.registration import send_role_selection

def get_parent_markup() -> InlineKeyboardMarkup:
    markup = InlineKeyboardMarkup()
    markup.row(
        InlineKeyboardButton(
            "–û—Ç–º–µ—Ç–∏—Ç—å —É—á–µ–Ω–∏–∫–∞ —á—Ç–æ –Ω–µ—Ç –Ω–∞ —É—Ä–æ–∫–µ", 
            callback_data="parent_mark_absent"
        )
    )
    return markup

def get_teacher_markup() -> InlineKeyboardMarkup:
    markup = InlineKeyboardMarkup()
    markup.row(
        InlineKeyboardButton("–û—Ç–º–µ—Ç–∏—Ç—å –≤—Ö–æ–¥/–≤—ã—Ö–æ–¥", callback_data="teacher_mark_attendance")
    )
    markup.row(
        InlineKeyboardButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ", callback_data="teacher_check_homework")
    )
    markup.row(
        InlineKeyboardButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —É—á–µ–Ω–∏–∫–æ–≤ –Ω–∞ —É—Ä–æ–∫–µ", callback_data="teacher_check_present")
    )
    return markup

def start(message: Message) -> None:
    user_id = message.from_user.id
    username = message.from_user.username or "there"
    
    try:
        user = User.objects.get(user_id=user_id)
        if user.role == "parent":
            markup = get_parent_markup()
        else:  # teacher
            markup = get_teacher_markup()
            
        bot.send_message(
            user_id,
            "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ üëá",
            reply_markup=markup
        )
    except User.DoesNotExist:
        send_role_selection(user_id, username)